#pragma checksum "d:\nazos-aps-net-web\Nazox_Asp.net_v1.0.0\Nazox Asp.net Core\Nazox\Views\FormAdvanced\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4c79b9506bb4f3a382b0ada67647c4b164b2d47e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FormAdvanced_Index), @"mvc.1.0.view", @"/Views/FormAdvanced/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4c79b9506bb4f3a382b0ada67647c4b164b2d47e", @"/Views/FormAdvanced/Index.cshtml")]
    #nullable restore
    public class Views_FormAdvanced_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/select2/css/select2.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/bootstrap-datepicker/css/bootstrap-datepicker.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/spectrum-colorpicker2/spectrum.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/bootstrap-touchspin/jquery.bootstrap-touchspin.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/jquery/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/metismenu/metisMenu.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/simplebar/simplebar.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/node-waves/waves.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/select2/js/select2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/bootstrap-datepicker/js/bootstrap-datepicker.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/spectrum-colorpicker2/spectrum.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/bootstrap-touchspin/jquery.bootstrap-touchspin.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/admin-resources/bootstrap-filestyle/bootstrap-filestyle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/bootstrap-maxlength/bootstrap-maxlength.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/pages/form-advanced.init.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/app.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "d:\nazos-aps-net-web\Nazox_Asp.net_v1.0.0\Nazox Asp.net Core\Nazox\Views\FormAdvanced\Index.cshtml"
  
    ViewBag.Title = "Advanced";
    ViewBag.pTitle = "Advanced";
    ViewBag.pageTitle = "Forms";
    Layout = "~/Views/_Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("styles", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e10384", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e11709", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e12825", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e14024", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card-body"">

                <h4 class=""card-title"">Select2</h4>
                <p class=""card-title-desc"">A mobile and touch friendly input spinner component for Bootstrap</p>

                <form>
                    <div class=""row"">
                        <div class=""col-lg-6"">
                            <div class=""mb-3"">
                                <label class=""form-label"">Single Select</label>
                                <select class=""form-control select2"">
                                    <option>Select</option>
                                    <optgroup label=""Alaskan/Hawaiian Time Zone"">
                                        <option value=""AK"">Alaska</option>
                                        <option value=""HI"">Hawaii</option>
                                    </optgroup>
                                    <optgroup label=""Pacific Time Zone"">
      ");
            WriteLiteral(@"                                  <option value=""CA"">California</option>
                                        <option value=""NV"">Nevada</option>
                                        <option value=""OR"">Oregon</option>
                                        <option value=""WA"">Washington</option>
                                    </optgroup>
                                    <optgroup label=""Mountain Time Zone"">
                                        <option value=""AZ"">Arizona</option>
                                        <option value=""CO"">Colorado</option>
                                        <option value=""ID"">Idaho</option>
                                        <option value=""MT"">Montana</option>
                                        <option value=""NE"">Nebraska</option>
                                        <option value=""NM"">New Mexico</option>
                                        <option value=""ND"">North Dakota</option>
                                        <option");
            WriteLiteral(@" value=""UT"">Utah</option>
                                        <option value=""WY"">Wyoming</option>
                                    </optgroup>
                                    <optgroup label=""Central Time Zone"">
                                        <option value=""AL"">Alabama</option>
                                        <option value=""AR"">Arkansas</option>
                                        <option value=""IL"">Illinois</option>
                                        <option value=""IA"">Iowa</option>
                                        <option value=""KS"">Kansas</option>
                                        <option value=""KY"">Kentucky</option>
                                        <option value=""LA"">Louisiana</option>
                                        <option value=""MN"">Minnesota</option>
                                        <option value=""MS"">Mississippi</option>
                                        <option value=""MO"">Missouri</option>
                   ");
            WriteLiteral(@"                     <option value=""OK"">Oklahoma</option>
                                        <option value=""SD"">South Dakota</option>
                                        <option value=""TX"">Texas</option>
                                        <option value=""TN"">Tennessee</option>
                                        <option value=""WI"">Wisconsin</option>
                                    </optgroup>
                                    <optgroup label=""Eastern Time Zone"">
                                        <option value=""CT"">Connecticut</option>
                                        <option value=""DE"">Delaware</option>
                                        <option value=""FL"">Florida</option>
                                        <option value=""GA"">Georgia</option>
                                        <option value=""IN"">Indiana</option>
                                        <option value=""ME"">Maine</option>
                                        <option value=""MD"">Mar");
            WriteLiteral(@"yland</option>
                                        <option value=""MA"">Massachusetts</option>
                                        <option value=""MI"">Michigan</option>
                                        <option value=""NH"">New Hampshire</option>
                                        <option value=""NJ"">New Jersey</option>
                                        <option value=""NY"">New York</option>
                                        <option value=""NC"">North Carolina</option>
                                        <option value=""OH"">Ohio</option>
                                        <option value=""PA"">Pennsylvania</option>
                                        <option value=""RI"">Rhode Island</option>
                                        <option value=""SC"">South Carolina</option>
                                        <option value=""VT"">Vermont</option>
                                        <option value=""VA"">Virginia</option>
                                        <opti");
            WriteLiteral(@"on value=""WV"">West Virginia</option>
                                    </optgroup>
                                </select>

                            </div>
                            <div>
                                <label class=""form-label"">Multiple Select</label>

                                <select class=""select2 form-control select2-multiple""
                                        multiple=""multiple"" data-placeholder=""Choose ..."">
                                    <optgroup label=""Alaskan/Hawaiian Time Zone"">
                                        <option value=""AK"">Alaska</option>
                                        <option value=""HI"">Hawaii</option>
                                    </optgroup>
                                    <optgroup label=""Pacific Time Zone"">
                                        <option value=""CA"">California</option>
                                        <option value=""NV"">Nevada</option>
                                        <op");
            WriteLiteral(@"tion value=""OR"">Oregon</option>
                                        <option value=""WA"">Washington</option>
                                    </optgroup>
                                    <optgroup label=""Mountain Time Zone"">
                                        <option value=""AZ"">Arizona</option>
                                        <option value=""CO"">Colorado</option>
                                        <option value=""ID"">Idaho</option>
                                        <option value=""MT"">Montana</option>
                                        <option value=""NE"">Nebraska</option>
                                        <option value=""NM"">New Mexico</option>
                                        <option value=""ND"">North Dakota</option>
                                        <option value=""UT"">Utah</option>
                                        <option value=""WY"">Wyoming</option>
                                    </optgroup>
                                    <opt");
            WriteLiteral(@"group label=""Central Time Zone"">
                                        <option value=""AL"">Alabama</option>
                                        <option value=""AR"">Arkansas</option>
                                        <option value=""IL"">Illinois</option>
                                        <option value=""IA"">Iowa</option>
                                        <option value=""KS"">Kansas</option>
                                        <option value=""KY"">Kentucky</option>
                                        <option value=""LA"">Louisiana</option>
                                        <option value=""MN"">Minnesota</option>
                                        <option value=""MS"">Mississippi</option>
                                        <option value=""MO"">Missouri</option>
                                        <option value=""OK"">Oklahoma</option>
                                        <option value=""SD"">South Dakota</option>
                                        <option valu");
            WriteLiteral(@"e=""TX"">Texas</option>
                                        <option value=""TN"">Tennessee</option>
                                        <option value=""WI"">Wisconsin</option>
                                    </optgroup>
                                    <optgroup label=""Eastern Time Zone"">
                                        <option value=""CT"">Connecticut</option>
                                        <option value=""DE"">Delaware</option>
                                        <option value=""FL"">Florida</option>
                                        <option value=""GA"">Georgia</option>
                                        <option value=""IN"">Indiana</option>
                                        <option value=""ME"">Maine</option>
                                        <option value=""MD"">Maryland</option>
                                        <option value=""MA"">Massachusetts</option>
                                        <option value=""MI"">Michigan</option>
                ");
            WriteLiteral(@"                        <option value=""NH"">New Hampshire</option>
                                        <option value=""NJ"">New Jersey</option>
                                        <option value=""NY"">New York</option>
                                        <option value=""NC"">North Carolina</option>
                                        <option value=""OH"">Ohio</option>
                                        <option value=""PA"">Pennsylvania</option>
                                        <option value=""RI"">Rhode Island</option>
                                        <option value=""SC"">South Carolina</option>
                                        <option value=""VT"">Vermont</option>
                                        <option value=""VA"">Virginia</option>
                                        <option value=""WV"">West Virginia</option>
                                    </optgroup>
                                </select>

                            </div>


                     ");
            WriteLiteral(@"   </div>

                        <div class=""col-lg-6"">
                            <div class=""mb-0"">
                                <label class=""form-label"">Search Disable</label>
                                <select class=""form-control select2-search-disable"">
                                    <option>Select</option>
                                    <optgroup label=""Alaskan/Hawaiian Time Zone"">
                                        <option value=""AK"">Alaska</option>
                                        <option value=""HI"">Hawaii</option>
                                    </optgroup>
                                    <optgroup label=""Pacific Time Zone"">
                                        <option value=""CA"">California</option>
                                        <option value=""NV"">Nevada</option>
                                        <option value=""OR"">Oregon</option>
                                        <option value=""WA"">Washington</option>
                ");
            WriteLiteral(@"                    </optgroup>
                                </select>

                            </div>

                        </div>
                    </div>

                </form>

            </div>
        </div>
        <!-- end select2 -->

    </div>


</div>
<!-- end row -->
<!-- end row -->

<div class=""row"">
    <div class=""col-lg-6"">
        <div class=""card"">
            <div class=""card-body"">

                <h4 class=""card-title"">Colorpicker</h4>
                <p class=""card-title-desc"">Examples of Spectrum Colorpicker.</p>

                <form action=""#"">
                    <div class=""mb-3"">
                        <label class=""form-label"">Simple input field</label>
                        <input type=""text"" class=""form-control"" id=""colorpicker-default"" value=""#50a5f1"">
                    </div>
                    <div class=""mb-3"">
                        <label class=""form-label"">Show Alpha</label>
                        <input type=");
            WriteLiteral(@"""text"" class=""form-control"" id=""colorpicker-showalpha"" value=""rgba(244, 106, 106, 0.6)"">
                    </div>
                    <div class=""mb-3"">
                        <label class=""form-label"">Show Palette Only</label>
                        <input type=""text"" class=""form-control"" id=""colorpicker-showpaletteonly"" value=""#34c38f"">
                    </div>
                    <div class=""mb-3"">
                        <label class=""form-label"">Toggle Palette Only</label>
                        <input type=""text"" class=""form-control"" id=""colorpicker-togglepaletteonly"" value=""#50a5f1"">
                    </div>

                    <div class=""mb-3"">
                        <label class=""form-label"">Show Initial</label>
                        <input type=""text"" class=""form-control"" id=""colorpicker-showintial"" value=""#f1b44c"">
                    </div>
                    <div>
                        <label class=""form-label"">Show Input And Initial</label>
                     ");
            WriteLiteral(@"   <input type=""text"" class=""form-control"" id=""colorpicker-showinput-intial"" value=""#f46a6a"">
                    </div>

                </form>

            </div>
        </div>

        <div class=""card"">
            <div class=""card-body"">

                <h4 class=""card-title"">Bootstrap MaxLength</h4>
                <p class=""card-title-desc"">
                    This plugin integrates by default with
                    Twitter bootstrap using badges to display the maximum lenght of the
                    field where the user is inserting text.
                </p>

                <label class=""mb-1"">Default usage</label>
                <p class=""text-muted mb-3 font-14"">
                    The badge will show up by default when the remaining chars are 10 or less:
                </p>
                <input type=""text"" class=""form-control"" maxlength=""25"" name=""defaultconfig"" id=""defaultconfig"">

                <div class=""mt-3"">
                    <label class=""mb-1"">Th");
            WriteLiteral(@"reshold value</label>
                    <p class=""text-muted mb-3 font-14"">
                        Do you want the badge to show up when there are 20 chars or less? Use the <code>threshold</code> option:
                    </p>
                    <input type=""text"" maxlength=""25"" name=""thresholdconfig"" class=""form-control"" id=""thresholdconfig"">
                </div>

                <div class=""mt-3"">
                    <label class=""mb-1"">All the options</label>
                    <p class=""text-muted mb-3 font-14"">
                        Please note: if the <code>alwaysShow</code> option is enabled, the <code>threshold</code> option is ignored.
                    </p>
                    <input type=""text"" class=""form-control"" maxlength=""25"" name=""alloptions"" id=""alloptions"">
                </div>

                <div class=""mt-3"">
                    <label class=""mb-1"">Position</label>
                    <p class=""text-muted mb-3 font-14"">
                        All you nee");
            WriteLiteral(@"d to do is specify the <code>placement</code> option, with one of those strings. If none
                        is specified, the positioning will be defauted to 'bottom'.
                    </p>
                    <input type=""text"" class=""form-control"" maxlength=""25"" name=""placement"" id=""placement"">
                </div>

                <div class=""mt-3"">
                    <label class=""mb-1"">Textarea</label>
                    <p class=""text-muted mb-3 font-14"">
                        Bootstrap maxlength supports textarea as well as inputs. Even on old IE.
                    </p>
                    <textarea id=""textarea"" class=""form-control"" maxlength=""225"" rows=""3"" placeholder=""This textarea has a limit of 225 chars.""></textarea>
                </div>

            </div>
        </div>

    </div> <!-- end col -->

    <div class=""col-lg-6"">
        <div class=""card"">
            <div class=""card-body"">

                <h4 class=""card-title"">Datepicker</h4>
          ");
            WriteLiteral(@"      <p class=""card-title-desc"">Examples of twitter bootstrap datepicker.</p>

                <form action=""#"">
                    <div class=""mb-4"">
                        <label class=""form-label"">Default Functionality</label>
                        <div class=""input-group"" id=""datepicker1"">
                            <input type=""text"" class=""form-control"" placeholder=""dd M, yyyy""
                                   data-date-format=""dd M, yyyy"" data-date-container='#datepicker1' data-provide=""datepicker"">

                            <span class=""input-group-text""><i class=""mdi mdi-calendar""></i></span>
                        </div><!-- input-group -->
                    </div>

                    <div class=""mb-4"">
                        <label class=""form-label"">Auto Close</label>
                        <div class=""input-group"" id=""datepicker2"">
                            <input type=""text"" class=""form-control"" placeholder=""dd M, yyyy""
                                   data-");
            WriteLiteral(@"date-format=""dd M, yyyy"" data-date-container='#datepicker2' data-provide=""datepicker""
                                   data-date-autoclose=""true"">

                            <span class=""input-group-text""><i class=""mdi mdi-calendar""></i></span>
                        </div><!-- input-group -->
                    </div>

                    <div class=""mb-4"">
                        <label class=""form-label"">Multiple Date</label>
                        <div class=""input-group"" id=""datepicker3"">
                            <input type=""text"" class=""form-control"" placeholder=""dd M, yyyy""
                                   data-provide=""datepicker"" data-date-container='#datepicker3' data-date-format=""dd M, yyyy""
                                   data-date-multidate=""true"">

                            <span class=""input-group-text""><i class=""mdi mdi-calendar""></i></span>
                        </div><!-- input-group -->
                    </div>

                    <div class=""mb-4"">");
            WriteLiteral(@"
                        <label class=""form-label"">Month View</label>
                        <div class=""position-relative"" id=""datepicker4"">
                            <input type=""text"" class=""form-control"" data-date-container='#datepicker4' data-provide=""datepicker""
                                   data-date-format=""MM yyyy"" data-date-min-view-mode=""1"">
                        </div>

                    </div>

                    <div class=""mb-4"">
                        <label class=""form-label"">Year View</label>
                        <div class=""position-relative"" id=""datepicker5"">
                            <input type=""text"" class=""form-control"" data-provide=""datepicker"" data-date-container='#datepicker5'
                                   data-date-format=""dd M, yyyy"" data-date-min-view-mode=""2"">
                        </div>
                    </div>

                    <div>
                        <label class=""form-label"">Date Range</label>

                        ");
            WriteLiteral(@"<div class=""input-daterange input-group"" id=""datepicker6"" data-date-format=""dd M, yyyy"" data-date-autoclose=""true"" data-provide=""datepicker"" data-date-container='#datepicker6'>
                            <input type=""text"" class=""form-control"" name=""start"" placeholder=""Start Date"" />
                            <input type=""text"" class=""form-control"" name=""end"" placeholder=""End Date"" />
                        </div>
                    </div>

                </form>
            </div>
        </div>


        <div class=""card"">
            <div class=""card-body"">

                <h4 class=""card-title"">Bootstrap TouchSpin</h4>
                <p class=""card-title-desc"">A mobile and touch friendly input spinner component for Bootstrap</p>

                <form>
                    <div class=""mb-3"">
                        <label class=""form-label"">Using data attributes</label>
                        <input id=""demo0"" type=""text"" value=""55"" name=""demo0"" data-bts-min=""0"" data-bts-max=""1");
            WriteLiteral(@"00"" data-bts-init-val="""" data-bts-step=""1"" data-bts-decimal=""0"" data-bts-step-interval=""100"" data-bts-force-step-divisibility=""round"" data-bts-step-interval-delay=""500"" data-bts-prefix="""" data-bts-postfix="""" data-bts-prefix-extra-class="""" data-bts-postfix-extra-class="""" data-bts-booster=""true"" data-bts-boostat=""10"" data-bts-max-boosted-step=""false"" data-bts-mousewheel=""true"" data-bts-button-down-class=""btn btn-default"" data-bts-button-up-class=""btn btn-default"">
                    </div>
                    <div class=""mb-3"">
                        <label class=""form-label"">Example with postfix (large)</label>
                        <input id=""demo1"" type=""text"" value=""55"" name=""demo1"">
                    </div>
                    <div class=""mb-3"">
                        <label class=""form-label"">With prefix </label>
                        <input id=""demo2"" type=""text"" value=""0"" name=""demo2"" class="" form-control"">
                    </div>

                    <div class=""mb-3"">
         ");
            WriteLiteral("               <label class=\"form-label\">Init with empty value:</label>\r\n                        <input id=\"demo3\" type=\"text\"");
            BeginWriteAttribute("value", " value=\"", 22205, "\"", 22213, 0);
            EndWriteAttribute();
            WriteLiteral(" name=\"demo3\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Value attribute is not set (applying settings.initval)</label>\r\n                        <input id=\"demo3_21\" type=\"text\"");
            BeginWriteAttribute("value", " value=\"", 22468, "\"", 22476, 0);
            EndWriteAttribute();
            WriteLiteral(@" name=""demo3_21"">
                    </div>
                    <div class=""mb-3"">
                        <label class=""form-label"">Value is set explicitly to 33 (skipping settings.initval) </label>
                        <input id=""demo3_22"" type=""text"" value=""33"" name=""demo3_22"">
                    </div>

                    <div>
                        <label class=""form-label"">Vertical button alignment:</label>
                        <input id=""demo_vertical"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 22972, "\"", 22980, 0);
            EndWriteAttribute();
            WriteLiteral(@" name=""demo_vertical"">
                    </div>

                </form>

            </div>
        </div>

    </div> <!-- end col -->
</div> <!-- end row -->


<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card-body"">

                <h4 class=""card-title"">Css Switch</h4>
                <p class=""card-title-desc"">Here are a few types of switches. </p>

                <div class=""row"">
                    <div class=""col-lg-6"">
                        <h5 class=""font-size-14 mb-3"">Example switch</h5>
                        <div>
                            <input type=""checkbox"" id=""switch1"" switch=""none"" checked />
                            <label for=""switch1"" data-on-label=""On"" data-off-label=""Off""></label>

                            <input type=""checkbox"" id=""switch2"" switch=""default"" checked />
                            <label for=""switch2"" data-on-label="""" data-off-label=""""></label>

                          ");
            WriteLiteral(@"  <input type=""checkbox"" id=""switch3"" switch=""bool"" checked />
                            <label for=""switch3"" data-on-label=""Yes"" data-off-label=""No""></label>

                            <input type=""checkbox"" id=""switch6"" switch=""primary"" checked />
                            <label for=""switch6"" data-on-label=""Yes"" data-off-label=""No""></label>

                            <input type=""checkbox"" id=""switch4"" switch=""success"" checked />
                            <label for=""switch4"" data-on-label=""Yes"" data-off-label=""No""></label>

                            <input type=""checkbox"" id=""switch7"" switch=""info"" checked />
                            <label for=""switch7"" data-on-label=""Yes"" data-off-label=""No""></label>

                            <input type=""checkbox"" id=""switch5"" switch=""warning"" checked />
                            <label for=""switch5"" data-on-label=""Yes"" data-off-label=""No""></label>

                            <input type=""checkbox"" id=""switch8"" switch=""danger"" checke");
            WriteLiteral(@"d />
                            <label for=""switch8"" data-on-label=""Yes"" data-off-label=""No""></label>

                            <input type=""checkbox"" id=""switch9"" switch=""dark"" checked />
                            <label for=""switch9"" data-on-label=""Yes"" data-off-label=""No""></label>
                        </div>
                    </div>

                    <div class=""col-lg-6"">
                        <div class=""mt-4 mt-lg-0"">
                            <h5 class=""font-size-14 mb-3"">Square switch</h5>
                            <div class=""d-flex"">
                                <div class=""square-switch"">
                                    <input type=""checkbox"" id=""square-switch1"" switch=""none"" checked />
                                    <label for=""square-switch1"" data-on-label=""On""
                                           data-off-label=""Off""></label>
                                </div>
                                <div class=""square-switch"">
                 ");
            WriteLiteral(@"                   <input type=""checkbox"" id=""square-switch2"" switch=""info"" checked />
                                    <label for=""square-switch2"" data-on-label=""Yes""
                                           data-off-label=""No""></label>
                                </div>
                                <div class=""square-switch"">
                                    <input type=""checkbox"" id=""square-switch3"" switch=""bool"" checked />
                                    <label for=""square-switch3"" data-on-label=""Yes""
                                           data-off-label=""No""></label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>


    </div>
</div>
<!-- end row -->
<!-- JAVASCRIPT -->
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e43560", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e44600", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e45640", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e46680", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e47720", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e48765", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e49806", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e50847", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e51888", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e52929", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e53970", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e55015", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79b9506bb4f3a382b0ada67647c4b164b2d47e56060", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
